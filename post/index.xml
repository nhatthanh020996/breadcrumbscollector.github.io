<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on breadcrumbscollector</title>
    <link>https://nhatthanh020996.github.io/post/</link>
    <description>Recent content in Posts on breadcrumbscollector</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://nhatthanh020996.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Variable Behavior in Python and C: A Comparison</title>
      <link>https://nhatthanh020996.github.io/does-python-function-use-calling-value-or-calling-reference/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/does-python-function-use-calling-value-or-calling-reference/</guid>
      <description>In C. 1. Variable in C. We start with the following simple example:
#include &amp;lt;stdio.h&amp;gt; int main() { int x; printf(&amp;#34;address of x: %p&amp;#34;, &amp;amp;x); printf(&amp;#34;\nvalue of x: %d&amp;#34;, x); x = 1 printf(&amp;#34;address of x: %p&amp;#34;, &amp;amp;x); printf(&amp;#34;\nvalue of x: %d&amp;#34;, x); return 0; } // the result will be: /* address of x: 0x7ffcd47a5cc4 value of x: 0 address of x: 0x7ffcd47a5cc4 value of x: 1 */ In the above piece of code, when declaring x, we create a space that occupies 4bytes in memory for x variable.</description>
    </item>
    
    <item>
      <title>How to optimize sql query</title>
      <link>https://nhatthanh020996.github.io/how-to-optimize-sql-query/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/how-to-optimize-sql-query/</guid>
      <description>Optimize network Keep connection.
Create connection pooling.
Integrate many query in a connection.
Optimize query execution Avoid n+1 problem.
Using EXPLAIN query to inspect the query plan.
Indexing.
Partition.
Sharding.
Scale hardware Vertical scale (scale up)
Horizontal scale using Master-Slave architecture (scale out).</description>
    </item>
    
    <item>
      <title>Isolation property in ACID</title>
      <link>https://nhatthanh020996.github.io/isolation/</link>
      <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/isolation/</guid>
      <description>Read Phenomena Dirty reads: if you are in an inflight transaction, you can read something that some other transaction has written but didn’t really commit yet.
Non-repeatable reads: if you read a row once, then read it again, the second read could see different data if another transaction has modified it.
Phantom reads: if you run a query twice, the second query could see different rows if another transaction has inserted or deleted them.</description>
    </item>
    
    <item>
      <title>Pgbouncer</title>
      <link>https://nhatthanh020996.github.io/pgbouncer/</link>
      <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/pgbouncer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>How database read records from disk</title>
      <link>https://nhatthanh020996.github.io/how-database-read-records-from-disk/</link>
      <pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/how-database-read-records-from-disk/</guid>
      <description>Dadabase disk page </description>
    </item>
    
    <item>
      <title>Socket Programming</title>
      <link>https://nhatthanh020996.github.io/socket-programming/</link>
      <pubDate>Sun, 11 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/socket-programming/</guid>
      <description>Mở đầu. A socket is a fundamental component provided by operating system that enables communication between processes, whether they reside on the same machine or different machines. To facilitate effective communication, processes must adhere to specific protocols, similar to humnans utilize a common language to communicate, TCP/IP stands out as the prevailing choice in modern times. This article will primarily focus on TCP/IP due to its widespread adoption. To establish a clear understanding, let&amp;rsquo;s define a couple of key terms:</description>
    </item>
    
    <item>
      <title>Hello world</title>
      <link>https://nhatthanh020996.github.io/testpage/</link>
      <pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/testpage/</guid>
      <description>Hello world! </description>
    </item>
    
  </channel>
</rss>
