<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Operating system on breadcrumbscollector</title>
    <link>https://nhatthanh020996.github.io/tags/operating-system/</link>
    <description>Recent content in Operating system on breadcrumbscollector</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://nhatthanh020996.github.io/tags/operating-system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Operating System (P3) - Memory Management</title>
      <link>https://nhatthanh020996.github.io/how-does-operating-system-manage-memory/</link>
      <pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/how-does-operating-system-manage-memory/</guid>
      <description>Logical vs Physical Address Space. 1.1. Logical address. Logical address sẽ được sinh ra ở lúc biên dịch chương trình, Ví dụ ta có một chương trình đơn giản helloworld như sau:
.data msg: .asciiz &amp;#34;Hello world! \n&amp;#34; .text li $v0, 4 la $a0, msg syscall Sau khi biên dịch, ta sẽ thấy được logical address của mỗi instruction như sau:
Các giá trị ở cột Address chính là logical address của mỗi instruction tương ứng.</description>
    </item>
    
    <item>
      <title>Operating System (P2) - Memory Layers Of A Process</title>
      <link>https://nhatthanh020996.github.io/process-memory-layer/</link>
      <pubDate>Tue, 24 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/process-memory-layer/</guid>
      <description>2. Memory layers. Memory layers của một process sẽ 4 segment chính như hình vẽ dưới đây. Hình ảnh trên biểu thị memory layout của một chương trình C, ở đây data segment được chia ra bao gồm uninitialized data và initialized data, nhưng để cho đơn giản ta sẽ gọi 2 phần này là data segment.
Sau khi process được OS cung cấp memory, sẽ có data segment và text segment là những vùng nhớ cố định, không thay đổi về cả kích thước lẫn nội dung của 2 vùng nhớ này trong suốt quá trình process được thực thi.</description>
    </item>
    
    <item>
      <title>Operating System (P1) - Process.</title>
      <link>https://nhatthanh020996.github.io/what-is-process/</link>
      <pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/what-is-process/</guid>
      <description>1. Process concept. 1.1. The Process. Một chương trình đang được thực thi bởi máy tính gọi là Process, ví dụ: Bạn có một chương trình helloworld được viết bằng C trong file helloworld.c như sau:
#include &amp;lt;stdio.h&amp;gt; int main() { printf(&amp;#34;Hello, World!\n&amp;#34;); return 0; } Bạn tiến hành biên dịch chương trình trên bằng câu lệnh sau trên terminal:
gcc helloworld.c -o helloworld Bạn tiếp tục chạy câu lệnh sau trên terminal:</description>
    </item>
    
  </channel>
</rss>
