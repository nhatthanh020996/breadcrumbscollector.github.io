<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on breadcrumbscollector</title>
    <link>https://nhatthanh020996.github.io/categories/tech/</link>
    <description>Recent content in Tech on breadcrumbscollector</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Nov 2022 12:00:00 +0000</lastBuildDate><atom:link href="https://nhatthanh020996.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Does python function use calling value or calling reference?</title>
      <link>https://nhatthanh020996.github.io/does-python-function-use-calling-value-or-calling-reference/</link>
      <pubDate>Fri, 04 Nov 2022 12:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/does-python-function-use-calling-value-or-calling-reference/</guid>
      <description>Introduction. Starting with some definitions in C. 1. Variable in C. We start with the following simple example:
#include &amp;lt;stdio.h&amp;gt; int main() { int x; printf(&amp;#34;address of x: %p&amp;#34;, &amp;amp;x); printf(&amp;#34;\nvalue of x: %d&amp;#34;, x); x = 1 printf(&amp;#34;address of x: %p&amp;#34;, &amp;amp;x); printf(&amp;#34;\nvalue of x: %d&amp;#34;, x); return 0; } // the result will be: /* address of x: 0x7ffcd47a5cc4 value of x: 0 address of x: 0x7ffcd47a5cc4 value of x: 1 */ In the above piece of code, when declaring x, we create a space that occupies 4bytes in memory for x variable.</description>
    </item>
    
    <item>
      <title>How database read records from disk</title>
      <link>https://nhatthanh020996.github.io/how-database-read-records-from-disk/</link>
      <pubDate>Thu, 04 Nov 2021 12:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/how-database-read-records-from-disk/</guid>
      <description>Dadabase disk page </description>
    </item>
    
    <item>
      <title>How to optimize sql query</title>
      <link>https://nhatthanh020996.github.io/how-to-optimize-sql-query/</link>
      <pubDate>Thu, 04 Nov 2021 12:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/how-to-optimize-sql-query/</guid>
      <description>How to optimize sql query </description>
    </item>
    
    <item>
      <title>Isolation</title>
      <link>https://nhatthanh020996.github.io/testpage/</link>
      <pubDate>Thu, 04 Nov 2021 12:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/testpage/</guid>
      <description>&lt;h2 id=&#34;服务网格简介&#34;&gt;服务网格简介&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;服务网格&lt;/strong&gt;（Service Mesh）是为解决微服务的通信和治理而出现的一种&lt;strong&gt;架构模式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;服务网格将服务间通讯以及与此相关的管理控制功能从业务程序中下移到一个基础设施层，从而彻底隔离了业务逻辑和服务通讯两个关注点。采用服务网格后，应用开发者只需要关注并实现应用业务逻辑。服务之间的通信，包括服务发现，通讯的可靠性，通讯的安全性，服务路由等由服务网格层进行处理，并对应用程序透明.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pgbouncer</title>
      <link>https://nhatthanh020996.github.io/pgbouncer/</link>
      <pubDate>Thu, 04 Nov 2021 12:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/pgbouncer/</guid>
      <description>&lt;h2 id=&#34;vim-graphical-cheat-sheet&#34;&gt;vim graphical cheat sheet&lt;/h2&gt;
&lt;p&gt;
  &lt;img src=&#34;//img/2018-02-09-vim-tips/vi-vim-cheat-sheet.svg&#34; alt=&#34;&#34;&gt;

&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Socket Programming</title>
      <link>https://nhatthanh020996.github.io/socket-programming/</link>
      <pubDate>Thu, 04 Nov 2021 12:00:00 +0000</pubDate>
      
      <guid>https://nhatthanh020996.github.io/socket-programming/</guid>
      <description>Mở đầu. A socket is a fundamental component provided by operating system that enables communication between processes, whether they reside on the same machine or different machines. To facilitate effective communication, processes must adhere to specific protocols, similar to humnans utilize a common language to communicate, TCP/IP stands out as the prevailing choice in modern times. This article will primarily focus on TCP/IP due to its widespread adoption. To establish a clear understanding, let&amp;rsquo;s define a couple of key terms:</description>
    </item>
    
  </channel>
</rss>
